@using Nordic_Door.Client.Models;
@using Nordic_Door.Shared.Models.Common;
@using Nordic_Door.Shared.Models.API;
@inject NavigationManager Navigation
@inject ISnackbar Snackbar


@inject HttpClient httpClient


<style>

	.login-form {
		text-align: center;
		padding: 70px o;
		
	}

	

	/*Styling for tekstboks*/
	input[type=text], [type=email], [type=password] {
		width: 20%;
		padding: 12px 20px;
		margin: 8px 0;
		box-sizing: border-box;
		border-radius: 5px;
	}

	/*Styling for knappene*/
	input[type=submit] {
		padding: 10px 15px;
		background: #848fa1;
		cursor: pointer;
		border-radius: 5px;
		color: white;
		transition-duration: 0.5s;
	}

	/*Styling knappene*/
	input[type=submit]:hover {
			background-color: #b29067;
		color: white;
	}

	
</style>

<div class="login-form">
	<EditForm class="login"  Model="@model" OnValidSubmit="OnValidSubmit">
		<div class="container"></div>
		<label for="brukernavn"><h2>Epost</h2></label><br />
		<InputText type="text" placeholder="Epost" name="brukernavn" required @bind-Value="model.EmailAddress"/> <br />
		<label for="passord"><h2>Passord</h2></label> <br />
		<InputText type="password" placeholder="Passord" name="password" required @bind-Value="model.Password"/> <br />
		<br /><input type="submit" value="Logg inn"/>
	</EditForm>

</div>

@code {

	[Parameter] public EventCallback<UserRelation> OnUserLoginSuccess { get; set; }
	private LoginModel model = new LoginModel();

	// Denne blir kjørt når bruker trykker "Login" og alle felt er godkjent - se EditForm
	private async Task OnValidSubmit(){
		// Send en post request til AuthController med epost of passord som bruker skrev inn i log in felt
		var res = await httpClient.PostAsJsonAsync<LoginRequest>("api/Auth/Login", new LoginRequest()
			{
				Email = model.EmailAddress,
				Password = model.Password,
			});
			// Om Statuskode fra backend ikke var 200, har vi en login feil
			if(!res.IsSuccessStatusCode) {
				Snackbar.Add("Feil innloggingsdetaljer, vennligst prøv igjen", Severity.Error);
			} else {
				// Her henter vi login info fra backend siden login var godkjent
				var _user = await res.Content.ReadFromJsonAsync<UserRelation>();
				// Her kaller vi funksjonen OnUserLoginSuccess (se MainLayout under Shared)
				await OnUserLoginSuccess.InvokeAsync(_user);
			}
	}

}

