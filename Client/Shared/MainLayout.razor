@inherits LayoutComponentBase
@inject HttpClient httpClient
@inject AltairCA.Blazor.WebAssembly.Cookie.IAltairCABlazorCookieUtil _cookieUtil;
@inject ISnackbar Snackbar
@using Nordic_Door.Shared.Models.Common;
@inject NavigationManager Navigation;
@using Newtonsoft.Json;


<style>
    html, body {
        background-color: #e9e9e8;
    }
</style>

<MudThemeProvider Theme="MyCustomTheme" />
<MudDialogProvider />
<MudSnackbarProvider />
<MudLayout>
    <CascadingValue Value="user">
        <AppHeader OnSignOut="SignOut"/>
    <MudMainContent Style="margin-left: 1.5rem; height: 100%; margin-right: 1.5rem; margin-top: 1rem">
        @if(loggedIn) {
             @Body
        } else {
                <Login OnUserLoginSuccess="EventCallback.Factory.Create(this, (UserRelation _user) => OnLoginSuccess(_user))" />
        }
    </MudMainContent>
    </CascadingValue>
</MudLayout>



@code{

    private UserRelation? user { get; set; }
    private bool loggedIn;

    protected override async Task OnInitializedAsync(){
        var id = await _cookieUtil.GetValueAsync("nd_login");


        if(id == null) {
            loggedIn = false;
            user = null;
            return;
        }
        user = JsonConvert.DeserializeObject<UserRelation>(id);
        loggedIn = true;
        StateHasChanged();
    }

    protected async void SignOut() {
        user = null;
        loggedIn = false;
        await _cookieUtil.RemoveAsync("nd_login");
        Snackbar.Add("Du har blitt logget ut", Severity.Success);
        Navigation.NavigateTo("/");
        StateHasChanged();
    }

    protected async Task OnLoginSuccess(UserRelation _user) {
        user = _user;
        loggedIn = true;
        await _cookieUtil.SetValueAsync("nd_login", JsonConvert.SerializeObject(_user));
        Snackbar.Add("Du har blitt innlogget", Severity.Success);

        StateHasChanged();
    }
    
    MudTheme MyCustomTheme = new MudTheme()
        {
            Palette = new Palette()
            {
                Primary = Colors.Blue.Accent4,
                Secondary = Colors.Red.Accent3,
                
               
            },
          
           
        };
}